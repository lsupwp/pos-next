# version: '3.8'

# services:
#   db:
#     image: mysql:8.0
#     container_name: mysql_db
#     environment:
#       MYSQL_ROOT_PASSWORD: "P@ssword"
#       MYSQL_DATABASE: pos_next
#       MYSQL_USER: lsupwp
#       MYSQL_PASSWORD: "P@ssword"
#     ports:
#       - "3306:3306"
#     volumes:
#       - db_next:/var/lib/mysql
#     healthcheck:
#       test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
#       timeout: 20s
#       retries: 3
#     networks:
#       - mynetwork
#     restart: unless-stopped

#   phpmyadmin:
#     image: phpmyadmin/phpmyadmin
#     container_name: phpmyadmin_ui
#     ports:
#       - "8080:80"
#     environment:
#       PMA_HOST: db
#       PMA_PORT: 3306
#       PMA_USER: root
#       PMA_PASSWORD: "P@ssword"
#     depends_on:
#       - db
#     networks:
#       - mynetwork
#     restart: unless-stopped

#   nextjs:
#     build:
#       context: ./next
#       dockerfile: Dockerfile
#     container_name: nextjs_app
#     ports:
#       - "3000:3000"
#     environment:
#       DATABASE_HOST: db
#       DATABASE_USER: root
#       DATABASE_PASSWORD: "P@ssword"
#       DATABASE_NAME: pos_next
#     depends_on:
#       - db
#     networks:
#       - mynetwork
#     command: ["npm", "run", "start"] # Run แบบ production
#     restart: unless-stopped

# networks:
#   mynetwork:
#     driver: bridge

# volumes:
#   db_next: {}


services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: P@ssword
      MYSQL_DATABASE: pos_next
      MYSQL_USER: lsupwp
      MYSQL_PASSWORD: P@ssword
    ports:
      - "3306:3306"
    volumes:
      - db_next:/var/lib/mysql
    healthcheck:
      test: [
        "CMD",
        "mysqladmin",
        "ping",
        "-h",
        "localhost",
        "-u",
        "root",
        "-p${MYSQL_ROOT_PASSWORD}",
      ]
      timeout: 20s
      retries: 3
    networks:
      - mynetwork
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_ui
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: P@ssword
    depends_on:
      - db
    networks:
      - mynetwork
    restart: unless-stopped

  nextjs:
    build:
      context: ./next
      dockerfile: Dockerfile
    container_name: nextjs_app
    ports:
      - "3000:3000"
    environment:
      DATABASE_HOST: db
      DATABASE_USER: lsupwp
      DATABASE_PASSWORD: P@ssword
      DATABASE_NAME: pos_next
    volumes:
      - ./next:/app # Mount โฟลเดอร์ ./next บน host ไปยัง /app ใน container
      - nextjs_node_modules:/app/node_modules # สร้าง named volume สำหรับ node_modules เพื่อป้องกันปัญหา permissions
    depends_on:
      - db
    networks:
      - mynetwork
    command: ["npm", "run", "dev"] # Override CMD ใน Dockerfile เพื่อให้ชัดเจน
    restart: unless-stopped

networks:
  mynetwork:
    driver: bridge

volumes:
  db_next: {}
  nextjs_node_modules: {}